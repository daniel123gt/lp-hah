---
import AccordionSimple from "../molecule/AccordionSimple.astro";
import { ACCORDION_PROCEDURE } from "../../consts";
---

<section class="container mx-auto py-[80px]">
  <h2 class="text-4xl font-semibold text-primary-blue text-center pb-[40px]">
    NUESTROS PROCEDIMIENTOS A DOMICILIO
  </h2>
  
  <!-- Filtros por categor√≠a -->
  <div class="flex flex-wrap justify-center gap-4 mb-12">
    <button 
      class="filter-btn active px-6 py-3 rounded-full bg-primary-blue text-white font-semibold hover:bg-accent-blue transition-colors duration-300"
      data-category="todos"
    >
      üè• Todos los Procedimientos
    </button>
    <button 
      class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-primary-blue font-semibold hover:bg-accent-blue hover:text-white transition-colors duration-300"
      data-category="tratamiento"
    >
      üíâ Tratamientos
    </button>
    <button 
      class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-primary-blue font-semibold hover:bg-accent-blue hover:text-white transition-colors duration-300"
      data-category="monitoreo"
    >
      ‚ù§Ô∏è Monitoreo
    </button>
    <button 
      class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-primary-blue font-semibold hover:bg-accent-blue hover:text-white transition-colors duration-300"
      data-category="cuidado"
    >
      ü©π Cuidados
    </button>
    <button 
      class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-primary-blue font-semibold hover:bg-accent-blue hover:text-white transition-colors duration-300"
      data-category="procedimiento"
    >
      üîå Procedimientos
    </button>
    <button 
      class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-primary-blue font-semibold hover:bg-accent-blue hover:text-white transition-colors duration-300"
      data-category="postoperatorio"
    >
      ‚úÇÔ∏è Postoperatorio
    </button>
  </div>

  <!-- Grid de acordeones -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6" id="accordion-grid">
    {
      ACCORDION_PROCEDURE.map((acc) => {
        return (
          <div class="accordion-wrapper" data-category={acc.category}>
            <AccordionSimple 
              title={acc.title} 
              icon={acc.icon}
              category={acc.category}
            >
              <p class="pt-4 text-lg leading-relaxed text-text-medium">{acc.description}</p>
            </AccordionSimple>
          </div>
        );
      })
    }
  </div>
</section>

<script>
  // Funci√≥n para inicializar los filtros
  function initFilters() {
    const filterBtns = document.querySelectorAll<HTMLButtonElement>('.filter-btn');
    const accordionWrappers = document.querySelectorAll<HTMLDivElement>('.accordion-wrapper');
    
    // Limpiar event listeners anteriores
    filterBtns.forEach(btn => {
      const newBtn = btn.cloneNode(true) as HTMLButtonElement;
      btn.parentNode?.replaceChild(newBtn, btn);
    });
    
    // Obtener referencias frescas despu√©s del clonado
    const freshFilterBtns = document.querySelectorAll<HTMLButtonElement>('.filter-btn');
    const freshAccordionWrappers = document.querySelectorAll<HTMLDivElement>('.accordion-wrapper');
    
    freshFilterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const category = btn.getAttribute('data-category');
        
        // Actualizar botones activos
        freshFilterBtns.forEach(b => {
          b.classList.remove('active', 'bg-primary-blue', 'text-white');
          b.classList.add('bg-gray-200', 'text-primary-blue');
        });
        btn.classList.add('active', 'bg-primary-blue', 'text-white');
        btn.classList.remove('bg-gray-200', 'text-primary-blue');
        
        // Filtrar acordeones
        freshAccordionWrappers.forEach(wrapper => {
          const wrapperCategory = wrapper.getAttribute('data-category');
          
          if (category === 'todos' || wrapperCategory === category) {
            wrapper.style.display = 'block';
            wrapper.style.animation = 'fadeIn 0.5s ease-in-out';
          } else {
            wrapper.style.display = 'none';
          }
        });
      });
    });
  }
  
  // Inicializar en la carga inicial
  document.addEventListener('DOMContentLoaded', () => {
    initFilters();
  });
  
  // Reinicializar en cada navegaci√≥n SPA
  document.addEventListener('astro:page-load', () => {
    // Peque√±o delay para asegurar que el DOM est√© listo
    setTimeout(() => {
      initFilters();
    }, 100);
  });
  
  // Limpiar antes de la navegaci√≥n
  document.addEventListener('astro:before-preparation', () => {
    // No es necesario limpiar nada aqu√≠ para este componente
  });
</script>

<style>
  .filter-btn.active {
    background-color: #1e40af;
    color: white;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .accordion-wrapper {
    animation: fadeIn 0.5s ease-in-out;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .filter-btn {
      font-size: 0.875rem;
      padding: 0.5rem 1rem;
    }
  }
</style>

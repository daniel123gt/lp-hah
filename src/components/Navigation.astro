---
// Navigation.astro - Sin React/Preact
import { NAV_LINKS } from "../consts";
---

<nav class="py-4">
  <!-- Botón hamburguesa para móvil -->
  <button 
    id="mobile-menu-btn"
    class="lg:hidden fixed top-6 right-6 z-50 p-2 bg-primary-blue/90 backdrop-blur-sm rounded-lg shadow-lg hover:bg-primary-blue transition-all duration-300"
    aria-label="Abrir menú de navegación"
  >
    <div class="w-6 h-6 flex flex-col justify-center items-center">
      <span class="w-5 h-0.5 bg-white rounded-full transition-all duration-300 transform" id="hamburger-line-1"></span>
      <span class="w-5 h-0.5 bg-white rounded-full transition-all duration-300 transform mt-1" id="hamburger-line-2"></span>
      <span class="w-5 h-0.5 bg-white rounded-full transition-all duration-300 transform mt-1" id="hamburger-line-3"></span>
    </div>
  </button>

  <!-- Menú móvil overlay -->
  <div 
    id="mobile-menu-overlay"
    class="lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40 opacity-0 invisible transition-all duration-300"
  ></div>

  <!-- Menú móvil -->
  <div 
    id="mobile-menu"
    class="lg:hidden fixed top-0 right-0 h-full w-80 bg-white shadow-2xl z-50 transform translate-x-full transition-transform duration-300 ease-in-out overflow-y-auto"
  >
    <!-- Header del menú móvil -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200">
      <h3 class="text-xl font-bold text-primary-blue">Menú</h3>
      <button 
        id="close-mobile-menu"
        class="p-2 hover:bg-gray-100 rounded-lg transition-colors duration-200"
        aria-label="Cerrar menú"
      >
        <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Enlaces móviles -->
    <div class="p-6">
      <ul class="space-y-2">
        {
          NAV_LINKS.map((item, index) => (
            <li class="mobile-nav-item">
              {item.children && item.children.length > 0 ? (
                <div class="mobile-dropdown">
                  <button 
                    class="mobile-dropdown-trigger w-full flex items-center justify-between p-3 text-left text-gray-700 hover:bg-gray-50 rounded-lg transition-colors duration-200 font-medium"
                    data-index={index}
                  >
                    <span>{item.label}</span>
                    <svg class="w-5 h-5 text-gray-500 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                  <ul class="mobile-dropdown-content hidden pl-4 space-y-1 mt-2">
                    {item.children.map((child) => (
                      <li>
                        <a
                          href={child.href}
                          class="mobile-nav-child-link block p-3 text-gray-600 hover:bg-primary-blue/10 hover:text-primary-blue rounded-lg transition-all duration-200"
                          data-href={child.href}
                        >
                          {child.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <a
                  href={item.href || "#"}
                  class="mobile-nav-link block p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors duration-200 font-medium"
                  data-href={item.href}
                >
                  {item.label}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </div>

  <!-- Navegación desktop (oculta en móvil) -->
  <ul class="hidden lg:flex flex-wrap gap-6 justify-center font-medium text-lg relative">
    {
      NAV_LINKS.map((item, index) => (
        <li class="relative group">
          <a
            href={item.href || "#"}
            class="nav-link px-4 py-2 rounded-lg hover:bg-white/25 hover:text-white transition-all duration-300 relative overflow-hidden text-white font-semibold"
            data-href={item.href}
          >
            <span class="relative z-10">{item.label}</span>
            <div class="absolute inset-0 bg-white/15 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
          </a>

          {/* Dropdown mejorado */}
          {item.children && item.children.length > 0 && (
            <ul class="absolute left-1/2 -translate-x-1/2 top-full mt-3 bg-white shadow-2xl rounded-xl p-3 z-50 min-w-[220px] opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0 border border-gray-100">
              {item.children.map((child) => (
                <li class="z-50">
                  <a
                    href={child.href}
                    class="z-50 nav-child-link block px-4 py-3 text-base hover:bg-primary-blue/10 rounded-lg transition-all duration-300 text-primary-blue hover:text-primary-blue font-medium hover:translate-x-1"
                    data-href={child.href}
                  >
                    {child.label}
                  </a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))
    }
  </ul>
</nav>

<script>
  // Funcionalidad del menú móvil
  function initMobileMenu() {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const closeMobileMenu = document.getElementById('close-mobile-menu');
    const hamburgerLines = [
      document.getElementById('hamburger-line-1'),
      document.getElementById('hamburger-line-2'),
      document.getElementById('hamburger-line-3')
    ];

    // Limpiar event listeners anteriores
    const newMobileMenuBtn = mobileMenuBtn?.cloneNode(true);
    if (mobileMenuBtn && newMobileMenuBtn) {
      mobileMenuBtn.parentNode?.replaceChild(newMobileMenuBtn, mobileMenuBtn);
    }

    const newCloseMobileMenu = closeMobileMenu?.cloneNode(true);
    if (closeMobileMenu && newCloseMobileMenu) {
      closeMobileMenu.parentNode?.replaceChild(newCloseMobileMenu, closeMobileMenu);
    }

    // Obtener referencias frescas después del clonado
    const freshMobileMenuBtn = document.getElementById('mobile-menu-btn');
    const freshCloseMobileMenu = document.getElementById('close-mobile-menu');

    // Abrir menú
    freshMobileMenuBtn?.addEventListener('click', () => {
      mobileMenu?.classList.remove('translate-x-full');
      mobileMenuOverlay?.classList.remove('opacity-0', 'invisible');
      document.body.style.overflow = 'hidden';
      
      // Animación hamburguesa a X
      hamburgerLines[0]?.classList.add('rotate-45', 'translate-y-1.5');
      hamburgerLines[1]?.classList.add('opacity-0');
      hamburgerLines[2]?.classList.add('-rotate-45', '-translate-y-1.5');
    });

    // Cerrar menú
    function closeMenu() {
      mobileMenu?.classList.add('translate-x-full');
      mobileMenuOverlay?.classList.add('opacity-0', 'invisible');
      document.body.style.overflow = '';
      
      // Animación X a hamburguesa
      hamburgerLines[0]?.classList.remove('rotate-45', 'translate-y-1.5');
      hamburgerLines[1]?.classList.remove('opacity-0');
      hamburgerLines[2]?.classList.remove('-rotate-45', '-translate-y-1.5');
    }

    freshCloseMobileMenu?.addEventListener('click', closeMenu);
    mobileMenuOverlay?.addEventListener('click', closeMenu);

    // Función para inicializar dropdowns móviles
    function initMobileDropdowns() {
      // Limpiar event listeners anteriores de dropdowns
      document.querySelectorAll('.mobile-dropdown-trigger').forEach(trigger => {
        const newTrigger = trigger.cloneNode(true);
        if (trigger.parentNode) {
          trigger.parentNode.replaceChild(newTrigger, trigger);
        }
      });

      // Agregar event listeners frescos a los dropdowns
      document.querySelectorAll('.mobile-dropdown-trigger').forEach(trigger => {
        trigger.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          const dropdown = trigger.nextElementSibling;
          const icon = trigger.querySelector('svg');
          
          if (dropdown?.classList.contains('hidden')) {
            dropdown.classList.remove('hidden');
            icon?.classList.add('rotate-180');
          } else {
            dropdown?.classList.add('hidden');
            icon?.classList.remove('rotate-180');
          }
        });
      });
    }

    // Función para inicializar enlaces móviles
    function initMobileLinks() {
      // Limpiar event listeners anteriores de enlaces
      document.querySelectorAll('.mobile-nav-link, .mobile-nav-child-link').forEach(link => {
        const newLink = link.cloneNode(true);
        if (link.parentNode) {
          link.parentNode.replaceChild(newLink, link);
        }
      });

      // Agregar event listeners frescos a los enlaces
      document.querySelectorAll('.mobile-nav-link, .mobile-nav-child-link').forEach(link => {
        link.addEventListener('click', () => {
          setTimeout(closeMenu, 100);
        });
      });
    }

    // Inicializar dropdowns y enlaces
    initMobileDropdowns();
    initMobileLinks();
  }

  // Funcionalidad de navegación activa (simplificada y eficiente)
  function setActiveNavLink() {
    const currentPath = window.location.pathname;
    
    // Remover clases activas existentes
    document.querySelectorAll(".nav-link, .mobile-nav-link, .nav-child-link, .mobile-nav-child-link").forEach((link) => {
      link.classList.remove("active-nav", "bg-white/30", "text-white", "shadow-lg", "bg-primary-blue/20", "text-primary-blue");
    });

    // Buscar enlace activo de forma eficiente
    let activeLink = null;
    
    // Buscar en enlaces de submenús primero
    activeLink = document.querySelector(`.nav-child-link[data-href="${currentPath}"], .mobile-nav-child-link[data-href="${currentPath}"]`);
    
    if (activeLink) {
      // Marcar enlace hijo como activo
      activeLink.classList.add("active-nav", "bg-primary-blue/20", "text-primary-blue");
      
      // Marcar enlace padre
      const parentNavLink = activeLink.closest("li")?.closest("ul")?.closest("li")?.querySelector(".nav-link");
      if (parentNavLink) {
        parentNavLink.classList.add("active-nav", "bg-white/30", "text-white", "shadow-lg");
      }
    } else {
      // Buscar en enlaces principales
      activeLink = document.querySelector(`.nav-link[data-href="${currentPath}"], .mobile-nav-link[data-href="${currentPath}"]`);
      
      if (activeLink) {
        activeLink.classList.add("active-nav", "bg-white/30", "text-white", "shadow-lg");
      }
    }

    // Caso especial para home
    if (currentPath === "/" || currentPath === "/" || currentPath === "") {
      const homeLink = document.querySelector('.nav-link[data-href="/"], .mobile-nav-link[data-href="/"]');
      if (homeLink) {
        homeLink.classList.add("active-nav", "bg-white/30", "text-white", "shadow-lg");
      }
    }
  }

  // Inicializar cuando la página carga
  document.addEventListener("DOMContentLoaded", () => {
    initMobileMenu();
    setActiveNavLink();
  });

  // Para navegación SPA de Astro - REINICIALIZAR en cada navegación
  document.addEventListener("astro:page-load", () => {
    // Pequeño delay para asegurar que el DOM esté listo
    setTimeout(() => {
      initMobileMenu();
      setActiveNavLink();
    }, 100);
  });

  // Cleanup cuando se desmonta
  document.addEventListener("astro:before-preparation", () => {
    // Resetear estado del menú
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const hamburgerLines = [
      document.getElementById('hamburger-line-1'),
      document.getElementById('hamburger-line-2'),
      document.getElementById('hamburger-line-3')
    ];

    // Cerrar menú si está abierto
    if (mobileMenu) {
      mobileMenu.classList.add('translate-x-full');
    }
    if (mobileMenuOverlay) {
      mobileMenuOverlay.classList.add('opacity-0', 'invisible');
    }
    document.body.style.overflow = '';

    // Resetear animación hamburguesa
    hamburgerLines[0]?.classList.remove('rotate-45', 'translate-y-1.5');
    hamburgerLines[1]?.classList.remove('opacity-0');
    hamburgerLines[2]?.classList.remove('-rotate-45', '-translate-y-1.5');
  });

  // También ejecutar si la URL cambia (para SPAs)
  window.addEventListener("popstate", setActiveNavLink);

  // Opcional: ejecutar cuando se hace clic en un enlace
  document.querySelectorAll(".nav-link, .nav-child-link, .mobile-nav-link, .mobile-nav-child-link").forEach((link) => {
    link.addEventListener("click", () => {
      setTimeout(setActiveNavLink, 100);
    });
  });
</script>

<style>
  /* Estilos CSS para los estados activos */
  .nav-link.active-nav,
  .mobile-nav-link.active-nav {
    font-weight: 700;
  }

  .nav-child-link.active-nav,
  .mobile-nav-child-link.active-nav {
    font-weight: 600;
  }

  /* Transición suave para los cambios */
  .nav-link,
  .nav-child-link,
  .mobile-nav-link,
  .mobile-nav-child-link {
    transition: all 0.3s ease;
  }

  /* Efecto de hover para el dropdown */
  .nav-link:hover + ul,
  ul:hover {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  /* Forzar color blanco en la navegación desktop */
  .nav-link {
    color: white !important;
  }
  
  .nav-link:hover {
    color: white !important;
  }
  
  .nav-link.active-nav {
    color: white !important;
  }

  /* Estilos para el menú móvil */
  .mobile-nav-item {
    border-bottom: 1px solid #f3f4f6;
  }

  .mobile-nav-item:last-child {
    border-bottom: none;
  }

  .mobile-dropdown-content {
    border-left: 2px solid #e5e7eb;
    margin-left: 0.5rem;
  }

  /* Scrollbar personalizado para el menú móvil */
  #mobile-menu::-webkit-scrollbar {
    width: 6px;
  }

  #mobile-menu::-webkit-scrollbar-track {
    background: #f1f5f9;
  }

  #mobile-menu::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }

  #mobile-menu::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>
